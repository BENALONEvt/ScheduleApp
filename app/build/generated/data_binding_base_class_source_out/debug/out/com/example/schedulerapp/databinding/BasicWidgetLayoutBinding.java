// Generated by view binder compiler. Do not edit!
package com.example.schedulerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.schedulerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BasicWidgetLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout widgetContainer;

  @NonNull
  public final TextView widgetDay;

  @NonNull
  public final TextView widgetLesson;

  @NonNull
  public final TextView widgetLocation;

  @NonNull
  public final TextView widgetTime;

  private BasicWidgetLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout widgetContainer, @NonNull TextView widgetDay,
      @NonNull TextView widgetLesson, @NonNull TextView widgetLocation,
      @NonNull TextView widgetTime) {
    this.rootView = rootView;
    this.widgetContainer = widgetContainer;
    this.widgetDay = widgetDay;
    this.widgetLesson = widgetLesson;
    this.widgetLocation = widgetLocation;
    this.widgetTime = widgetTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BasicWidgetLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BasicWidgetLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.basic_widget_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BasicWidgetLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout widgetContainer = (LinearLayout) rootView;

      id = R.id.widget_day;
      TextView widgetDay = ViewBindings.findChildViewById(rootView, id);
      if (widgetDay == null) {
        break missingId;
      }

      id = R.id.widget_lesson;
      TextView widgetLesson = ViewBindings.findChildViewById(rootView, id);
      if (widgetLesson == null) {
        break missingId;
      }

      id = R.id.widget_location;
      TextView widgetLocation = ViewBindings.findChildViewById(rootView, id);
      if (widgetLocation == null) {
        break missingId;
      }

      id = R.id.widget_time;
      TextView widgetTime = ViewBindings.findChildViewById(rootView, id);
      if (widgetTime == null) {
        break missingId;
      }

      return new BasicWidgetLayoutBinding((LinearLayout) rootView, widgetContainer, widgetDay,
          widgetLesson, widgetLocation, widgetTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
